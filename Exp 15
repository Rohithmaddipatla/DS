#include <stdio.h>
#define SIZE 10

int hashTable[SIZE];

void insert(int key) {
    int index = key % SIZE;
    int start = index;
    while (hashTable[index] != -1) {
        index = (index + 1) % SIZE;
        if (index == start) {
            printf("Hash table is full!\n");
            return;
        }
    }
    hashTable[index] = key;
}

int search(int key) {
    int index = key % SIZE;
    int start = index;
    while (hashTable[index] != -1) {
        if (hashTable[index] == key)
            return index;
        index = (index + 1) % SIZE;
        if (index == start)
            return -1;
    }
    return -1;
}

void display() {
    int i;
    for (i = 0; i < SIZE; i++)
        printf("%d: %d\n", i, hashTable[i]);
}

int main() {
    int i, choice, key, pos;
    for (i = 0; i < SIZE; i++)
        hashTable[i] = -1;

    do {
        printf("\n1.Insert 2.Search 3.Display 0.Exit: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                printf("Enter key: ");
                scanf("%d", &key);
                insert(key);
                break;
            case 2:
                printf("Enter key to search: ");
                scanf("%d", &key);
                pos = search(key);
                if (pos != -1)
                    printf("Key found at index %d\n", pos);
                else
                    printf("Key not found\n");
                break;
            case 3:
                display();
                break;
        }
    } while (choice != 0);

    return 0;
}

